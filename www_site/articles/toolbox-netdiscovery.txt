[Intro]
id=intro
category=NetworkDiscovery
title=Network Discovery
desc="
"

 
// 
[DiscoverHost]
id=dicoverhost
category=NetworkDiscovery
keywords=
title=Network scanner: Recherche des serveurs
desc_enc=
desc="
Utiliser nmap pour identifier les serveurs sur le sous-réseau 10.10.10.4/24
<pre><code># nmap 10.10.10.4/24
# nmap 10.10.10.1-255
</code></pre>
"   
title_en=Discover Hosts
desc_en="
Use nmap to identify live hosts on 10.10.10.4/24 network
<pre><code># nmap 10.10.10.4/24
# nmap 10.10.10.1-255
</code></pre>
"  



[PortScanner]
id=portscanner
category=NetworkDiscovery
keywords=
desc_enc=
title="Port scanner: Scan des ports ouverts d'un serveur"
desc="
<pre><code># nmap 10.10.10.4
# nmap -A  10.10.10.4          : Scan les 1000 ports les plus utilisés. Cherche les versions des services et l'OS
# nmap -sV -sC -p- 10.10.10.4  : scan les 655535 ports TCP et cherche les versions des services ouverts. 
# nmap -sU 10.10.10.4          : scan des ports UDP (trés trés lent)
    -sV : Tente d'identifier la version du service
    -sC : Scanne avec les scripts NMap par défaut. Les scripts considérés comme sans risque.
    -A  : Tente de détecter la version de l'OS, la version des services, utilise les scripts par défaut, et réalise un traceroute
    -p- : Scanne les 65535 ports TCP
    -sU : Scanne les ports UDP (trés long)
    -oN nmap.log : output file
</code></pre> 
On peut lancer ces trois commandes dans trois shells en parallèle.
"
title_en=Port scanner
desc_en="
<pre><code># nmap 10.10.10.4    
# nmap -A  10.10.10.4          : Scan Top 1000 ports et get services versions
# nmap -sV -sC -p- 10.10.10.4  : Scan all 65535 TCP ports
# nmap -sU 10.10.10.4          : Scan UDP ports
    -sV : Attempts to determine the version of the service running on port
    -sC : Scan with default NSE scripts. Considered useful for discovery and safe
    -A  : Enables OS detection, version detection, script scanning, and traceroute
    -p- : Port scan all ports
    -sU : UDP ports (very slow)
    -oN nmap.log : output file
 </code></pre> 
The three scripts can be launch in parallel in three different xterms.
"

[PortIdentification]
id=portidentification
category=NetworkDiscovery
keywords=
title=Identification des services
desc="
Les services de type ftp, web, ldap tournent peuvent fonctionner sur n'importe quel port, mais utilisent généralement les ports qui leur sont réservés.
Le port 80 par exemple est le port utilisé par les serveurs web pour HTTP.
Le port 443 est le port pour HTTPS.
<pre><code>TCP
	20: ftp data
	21: ftp control
	22: ssh
	23: telnet
	25: SMTP (mail)
	37: Time protocol
	53: Bind/DNS
	69: TFTP (Trivial FTP)
	80: HTTP
	109: POP2
	110: POP3
	111: RPC Remote Procedure Call
	137: Netbios Name Service
	138: Netbios Datagram Service
	139: Netbios Session Service
	143: IMAP (mail)
	161: SNMP
	220: IMAP
	389: LDAP
	443: HTTPS
	445: MS Active Directory, SMB
	464: Kerberos
	1521: Oracle Database
	3000: Node JS
	3306: MySQL
UDP
	69: TFTP
	161: SNMP
	
http://www.0daysecurity.com/penetration-testing/enumeration.html 
</code></pre> 
"
title_en=Ports identification
desc_en="
Despite they can run on any port, services such as ftp, web, or ldap generally use the ports reserved for them.
Port 80 for example is used by web servers for HTTP.
Port 443 is the port for HTTPS.
<pre><code>TCP
	20: ftp data
	21: ftp control
	22: ssh
	23: telnet
	25: SMTP (mail)
	37: Time protocol
	53: Bind/DNS
	69: TFTP (Trivial FTP)
	80: HTTP
	109: POP2
	110: POP3
	111: RPC Remote Procedure Call
	137: Netbios Name Service
	138: Netbios Datagram Service
	139: Netbios Session Service
	143: IMAP (mail)
	161: SNMP
	220: IMAP
	389: LDAP
	443: HTTPS
	445: MS Active Directory, SMB
	464: Kerberos
	1521: Oracle Database
	3000: Node JS
	3306: MySQL
UDP
	69: TFTP
	161: SNMP
	
http://www.0daysecurity.com/penetration-testing/enumeration.html 
</code></pre> 
"




[21FtpAnonymous]
id=21FtpAnonymous
category=NetworkDiscovery
keywords=
title=21: FTP - Anonymous
desc="
Les serveurs ftp permettent de transférer des fichiers.  
Une fois connecté avec un login/password, il est possible de se déplacer dans l'arborescence des répertoire pour  d'uploader/downloader des fichiers.   
Par défaut, le protocole est optimisé pour les fichiers textes. Ne pas oublier d'activer le mode binaire si nécessaire.   
Un compte invité, ou anonymous permet sur certain serveur de télécharger librement des documents publics.   
Le login est 'anonymous', le mot de passe est par convention le mail de l'invité.   
<pre><code>$ ftp 10.0.0.11
Name (10.0.0.11:yolo): anonymous
Password: yolo@yolospacehacker.com
ftp> pwd 
ftp> cd docs
ftp> ls 
ftp> bin
ftp> get flag.txt
ftp> put backdoor.php
ftp> bye
</code></pre>
"

title_en=21: FTP - Anonymous
desc_en="
Ftp servers are used to transfer files.  
Once logged in with a login/password, it is possible to move through the directory tree to upload/download files.    
By default, the protocol is optimised for text files. Do not forget to activate the binary mode if necessary.   
A guest or anonymous account allows on certain servers to freely download public documents.   
The login is 'anonymous', the password is conventionally the guest's email.   
<pre><code>$ ftp 10.0.0.11
Name (10.0.0.11:yolo): anonymous
Password: yolo@yolospacehacker.com
ftp> pwd 
ftp> cd docs
ftp> ls 
ftp> bin
ftp> get flag.txt
ftp> put backdoor.php
ftp> bye
</code></pre>
"



[22Ssh]
id=22Ssh
category=NetworkDiscovery
keywords=
title=22: Ssh
desc="
Le port 22 est le port ssh, qui permet l'accès distant à un terminal.   
Il est possible de se connecter avec un login/password.
<pre><code>$ ssh yolo@10.0.0.11
</code></pre>

Il est aussi possible de se connecter avec un fichier de clef privé.    
<pre><code>$ ssh -i id_rsa yolo@10.0.0.11
</code></pre>
Le fichier de clef privée ne doit être en lecture que par son propriétaire.   
<pre><code>$ chmod 600 id_rsa
</code></pre>
"

title_en=22: Ssh
desc_en="
22 is the ssh port, which allows remote access to a terminal.   
It is possible to connect with a login/password.
<pre><code>$ ssh yolo@10.0.0.11
</code></pre>

It is also possible to log in with a private key file.    
<pre><code>$ ssh -i id_rsa yolo@10.0.0.11
</code></pre>
The private key file should only be read by its owner.     
<pre><code>$ chmod 600 id_rsa
</code></pre>
"




[80HTTProbots]
id=80HTTProbots
category=NetworkDiscovery
keywords=
title=80: HTTP - Robots.txt
desc="
Le fichier robots.txt, quand il existe, est enregistré à la racine d'un site web. 
Il contient une liste des ressources du site qui ne sont pas censées être indexées par les robots d'indexation des moteurs de recherche.<br/>
Par convention, les robots consultent robots.txt avant d'indexer un site Web.<br/>
Son contenu peut donc nous interresser.
<pre><code>http://10.10.10.8/robots.txt
</code></pre>
Plus d'info : <a href='https://fr.wikipedia.org/wiki/Protocole_d%27exclusion_des_robots'>https://fr.wikipedia.org/wiki/Protocole_d%27exclusion_des_robots</a>
"

title_en=80: HTTP - Robots.txt
desc_en="
The robots.txt file, when it exists, is stored at the root of a website. 
It contains a list of the resources of the site that are not supposed to be indexed by search engine spiders.<br/>
By convention, robots read robots.txt before indexing a website.<br/>
Its content may therefore be of interest to us.<pre><code>http://10.10.10.8/robots.txt
</code></pre>
Plus d'info : <a href='https://en.wikipedia.org/wiki/Robots_exclusion_standard'>https://en.wikipedia.org/wiki/Robots_exclusion_standard</a>
"




[80HTTPsrc]
id=80HTTPsrc
category=NetworkDiscovery
keywords=
title=80: HTTP - Page source
desc="
Les développeurs laissent parfois des informations utiles, voire des mots de passe dans les commentaires du code. Ce sont souvent des urls,ou des champs de formulaires utilisés pour les tests.<br/><br/>
<div>Commentaires dans le code source HTML ou JS de la page</div>
<pre><code>/* Secret code */
&lt;!--- Secret code ---&gt;
</code></pre>

<div>Elements HTML cachés</div>
<pre><code>&lt;p hidden&gt;Secret code.&lt;/p&gt;
&lt;label style=&apos;display: none&apos;&gt;Secret code.&lt;/label&gt;
</code></pre>
"

title_en=80: HTTP - Page source
desc_en="
Developers sometimes leave useful information or even passwords in code comments. These are often urls, or form fields used for testing.<br/><br/>
<div>Comments in the HTML or JS source code of the pagee</div>
<pre><code>/* Secret code */
&lt;!--- Secret code ---&gt;
</code></pre>

<div>Hidden HTML elements</div>
<pre><code>&lt;p hidden&gt;Secret code.&lt;/p&gt;
&lt;label style=&apos;display: none&apos;&gt;Secret code.&lt;/label&gt;
</code></pre>
"




[80HTTPdirs]
id=80HTTPdirs
category=NetworkDiscovery
keywords=
title=80: HTTP - Brute force de fichiers et répertoires
desc="
Bruteforcer un site web consiste à tester la présence de pages accessibles, telles /register, /register.php, /admin, /upload, /users/login.txt, /admin/password.sav, ...
Pour celà il existe des listes de répertoires et de noms de fichiers fréquemment présents sur les serveurs web.<br/>
<br/>
Une fois la techno du serveur connue (php, java, wordpress, joomla, ...) il est possible d'utiliser des listes optimisées, et ne chercher que les extensions adaptées: php, php4, php5, exe, jsp, ...<br/>
Il est aussi possible de chercher des fichiers aux extensions intéressantes : cfg, txt, sav, jar, zip, sh, ...

<br/>
Logiciels de brute force usuels :
<ul>
<li>dirb : Ligne de commande. A utiliser pour un check rapide avec sa liste 'common.txt'.</li>
<li>gobuster : Ligne de commande. A utiliser avec la liste 'directory-list-2.3-medium.txt' de dirbuster</li>
<li>dirbuster : Interface graphique. Visuel mais pas forcément le meilleur choix</li>
</ul>

Il est crucial de bien choisir la liste de répertoires/noms de fichiers:
<ul>
<li>/usr/share/wordlists/dirb/common.txt : petite liste bien construite</li>
<li>/usr/share/wordlists/dirbuster/directory-list-2.3-medium.txt : grosse liste. Normalement couvre tous les CTF.</li>   
<li>https://github.com/danielmiessler/SecLists : Une fois à l'aise avec les deux listes précédentes, il est possible de trouver des listes plus optimisées sur ce git.
<li>Sur les distribution Kali et Parrot, le répertoire /usr/share/wordlists contient des liens vers de nombreuses listes. Prenez le temps de le regarder en détail.</li>
</ul>
<br/>

<h5>Dirb</h5>
Dirb est préinstallé sur Kali ou Parrot. Si ce n'est pas le cas:
<pre><code>sudo apt-get install -y dirb
</code></pre>
Lancer un scan rapide avec dirb, qui va utiliser sa liste 'common.txt':
<pre><code>dirb 10.10.10.11
</code></pre>
<br/>
Rechercher les fichiers avec l'extension .php:
<pre><code>dirb 10.10.10.11  -X .php
</code></pre>
<br/>


<h5>Gobuster</h5>
<pre><code>https://github.com/OJ/gobuster
</code></pre>
Le télécharger et l'installer en /opt
<pre><code>wget https://github.com/OJ/gobuster/releases/download/v3.0.1/gobuster-linux-amd64.7z
sudo apt install p7zip-full
7z x gobuster-linux-amd64.7z
sudo cp gobuster-linux-amd64/gobuster /opt/gobuster
chmod a+x /opt/gobuster
</code></pre>

Bruteforce le site http://10.10.10.11, avec la liste directory-list-2.3-medium.txt, avec des extensions de fichier html,php,txt
<pre><code>/opt/gobuster dir -w /usr/share/wordlists/dirbuster/directory-list-2.3-medium.txt -u http://10.10.10.11  -l -x html,php,txt
</code></pre>

Pour une url en HTTPS, ajouter l'option de ligne de commande 
<pre><code>-k : skip HTTPS ssl verification
</code></pre>
"

; Eng
title_en=80: HTTP - Directory and files bruteforce
desc_en="
Bruteforcing a website consists in testing the presence of accessible pages, such as /register, /register.php, /admin, /upload, /users/login.txt, /admin/password.sav, ...
For this there are lists of directories and filenames frequently found on web servers.<br/>
<br/>
Once web server langage/framework is known (php, java, cgi / wordpress, joomla, ...), it is possible to use optimized lists, and search only the appropriate extensions.: php, php4, php5, exe, jsp, ...<br/>
It is also possible to search for files with interesting extensions. : cfg, txt, sav, jar, zip, sh, ...

<br/>
Usual web brute force software :
<ul>
<li>dirb: Command line. To be used for a quick check, with its list 'common.txt'.</li>
<li>gobuster: Command line. To be used with the list 'directory-list-2.3-medium.txt' from dirbuster</li>
<li>dirbuster: GUI. With a Gui, but not the best choice.</li>
</ul>

It is crucial to choose the right list of directories/filenames:
<ul>
<li>/usr/share/wordlists/dirb/common.txt: Small well-constructed list</li>
<li>/usr/share/wordlists/dirbuster/directory-list-2.3-medium.txt: Big list. Should covers all CTFs.</li>   
<li>https://github.com/danielmiessler/SecLists : Once comfortable with the two previous lists, it is possible to find more optimized lists at this address.
<li>On Kali and Parrot distributions, the /usr/share/wordlists directory contains links to many lists. Take the time to look at it in detail.</li>
</ul>
<br/>

<h5>Dirb</h5>
Dirb is usually preinstalled on Kali or Parrot. If not:
<pre><code>sudo apt-get install -y dirb
</code></pre>
Run a quick scan with dirb, whith its default 'common.txt' list:
<pre><code>dirb 10.10.10.11
</code></pre>

Find files with .php file extension:
<pre><code>dirb 10.10.10.11  -X .php
</code></pre>
<br/>

<h5>Gobuster</h5>
<pre><code>https://github.com/OJ/gobuster
</code></pre>
Download and install in /opt
<pre><code>wget https://github.com/OJ/gobuster/releases/download/v3.0.1/gobuster-linux-amd64.7z
sudo apt install p7zip-full
7z x gobuster-linux-amd64.7z
sudo cp gobuster-linux-amd64/gobuster /opt/gobuster
chmod a+x /opt/gobuster
</code></pre>

Bruteforce http://10.10.10.11, with the list 'directory-list-2.3-medium.txt', and file extensions html,php,txt:
<pre><code>/opt/gobuster dir -w /usr/share/wordlists/dirbuster/directory-list-2.3-medium.txt -u http://10.10.10.11  -l -x html,php,txt
</code></pre>

For an HTTPS url, add the command line option 
<pre><code>-k : skip HTTPS ssl verification
</code></pre>
"




[80HTTPbrutebasicauth]
id=80HTTPbrutebasicauth
category=NetworkDiscovery
keywords=
title=80: HTTP - Basic Auth - Brute force  
desc="
<h5>Hydra</h5>
<pre><code>hydra -l admin -P /usr/share/wordlists/rockyou.txt  -f 10.10.10.157 http-get /monitoring
</code></pre>
<pre><code>-l login 
-P password file 
-f server adress
http-get : HTTP request type
/monitoring : url path
</code></pre>
"
title_en=80: HTTP - Basic Auth - Brute force 
desc_en="
<h5>Hydra</h5>
<pre><code>hydra -l admin -P /usr/share/wordlists/rockyou.txt  -f 10.10.10.157 http-get /monitoring
</code></pre>
<pre><code>-l login 
-P password file 
-f server adress
http-get : HTTP request type
/monitoring : url path
</code></pre>
"


[80HTTPbruteFormPost]
id=80HTTPbruteformpost
category=NetworkDiscovery
keywords=
title=80: HTTP - Form HTTP Post - Authent brute force
desc="
<h5>Hydra</h5>
<pre><code>hydra -l admin -P /usr/share/wordlists/rockyou.txt 10.10.10.11 http-post-form '/admin/login.php:username=^USER^&password=^PASS^:F=Wrong password:H=Cookie\: PHPSESSIONID=ms0t93n23mc2bn2512ncv1ods4' -V
</code></pre>
Attention si la réponse est un 302 Redirect, hydra ne va pas suivre et va générer un faux positif.
"

; eng 
title_en=80: HTTP - HTML Form POST - Authentication brute force
desc_en="
<h5>Hydra</h5>
<pre><code>hydra -l admin -P /usr/share/wordlists/rockyou.txt 10.10.10.11 http-post-form '/admin/login.php:username=^USER^&password=^PASS^:F=Wrong password:H=Cookie\: PHPSESSIONID=ms0t93n23mc2bn2512ncv1ods4' -V
</code></pre>
Beware if the answer is a 302 Redirect, hydra will not follow and will generate a false positive."



[80HTTPbruteFormGet]
id=80HTTPbruteformget
category=NetworkDiscovery
keywords=
title=80: HTTP - Form HTTP GET - Brute force
desc="
<h5>Hydra</h5>
<pre><code>hydra -l admin -P /usr/share/wordlists/rockyou.txt 10.10.10.4 http-get-form '/login.php:username=^USER^&password=^PASS^:F=Login failed:H=Cookie\: PHPSESSIONID=ms0t93n23mc2bn2512ncv1ods4' -V
</code></pre>
Attention si la réponse est un 302 Redirect, hydra ne va pas suivre et va générer un faux positif.
"
; eng 
title_en=80: HTTP - Form HTTP GET - Brute force
desc_en="
<h5>Hydra</h5>
<pre><code>hydra -l admin -P /usr/share/wordlists/rockyou.txt 10.10.10.4 http-get-form '/login.php:username=^USER^&password=^PASS^:F=Login failed:H=Cookie\: PHPSESSIONID=ms0t93n23mc2bn2512ncv1ods4' -V
</code></pre>
Beware if the answer is a 302 Redirect, hydra will not follow and will generate a false positive."



[Wordpress]
id=wordpress
category=NetworkDiscovery
keywords=
title=CMS: Wordpress
desc="
<h5>Wordpress</h5>

Format des urls
<pre><code>Posts : /index.php?p=22
        /index.php/2017/04/12/hello-world/
        /index.php/jobs/apply/8/
Login : /wp-login/
        /wp-login.php
Uploaded files : /wp-content/uploads/%year%/%month%/%filename%
</code></pre>

Fichier de config, et credentials de la base de donnée
<pre><code>/var/www/html/   
wordpress/wp-config.php
wordpress/htdocs/wp-config.php
</code></pre>

<h5>Wpscan</h5>
Wpscan connait la structure d'un site wordpress et va faire du brute force pour identifier les pages, le posts, les users, le thème, les plugins.<br/>
Les failles de wordpress viennent essentiellement des plugins non mis à jour. 
<pre><code>wpscan --url http:10.10.10.10/wordpress/ -e
--url : url de la page wordpress.
-e : énumeration
</code></pre>
Brute force du login
<pre><code>wpscan --url http://10.10.10.10/wordpress/  -P rockyou.txt -U admin
</code></pre>
"

; eng
title_en=CMS: Wordpress
desc_en="
<h5>Wordpress</h5>

URLs format:
<pre><code>Posts : /index.php?p=22
        /index.php/2017/04/12/hello-world/
        /index.php/jobs/apply/8/
Login : /wp-login/
        /wp-login.php
Uploaded files : /wp-content/uploads/%year%/%month%/%filename%
</code></pre>

Config file and database credentials
<pre><code>/var/www/html/   
wordpress/wp-config.php
wordpress/htdocs/wp-config.php
</code></pre>

<h5>Wpscan</h5>
Wpscan knows the structure of a wordpress site and will make brute force to identify the pages, the posts, the users, the theme, the plugins.<br/>
Wordpress flaws are mainly due to non-updated plugins. 
<pre><code>wpscan --url http:10.10.10.10/wordpress/ -e
--url : wordpress url
-e : enum pages, posts, users, theme, plugins, ...
</code></pre>
Login bruteforce
<pre><code>wpscan --url http://10.10.10.10/wordpress/  -P rockyou.txt -U admin
</code></pre>
"






[3306MySQL]
id=3306MySQL
category=NetworkDiscovery
keywords=
title=3306: MySQL
desc="
Si vous avez les identifiants et mots de passe. Se connecter avec le client mysql.
<pre><code>mysql --host=HOST -u USER -p
--host=précise le nom du serveur
-u le login
-p force la saisie du mot de passe.
</code></pre>
Dumper le contenu de la base.
<pre><code>show databases; -- Liste les bases de données. 
                -- La base 'information_schema' contient des informations internes à mysql ou mariadb. On peut généralement l'ignorer.
use DATABASE;
show tables;    -- Liste les tables
SELECT * FROM TABLENAME;
quit;
</code></pre>
"
; eng
title_en=3306: MySQL
desc_en="
You have found database credentials in config file. Let use mysql client to connect and dump the database.
<pre><code>mysql --host=HOST -u USER -p
--host xx : Server IP or name
-u xx     : login
-p        : manually enter the password.
</code></pre>
List databases.<br/>
<pre><code>show databases; 
</code></pre>
Ignore internal databases and choose the application database.<br/>
The database 'information_schema' contains internal information of mysql or mariadb. It can generally be ignored.<br/>
Select the aplication database, list tables, then dump interresting tables such as 'users'.
<pre><code>use DATABASE;
show tables;     
SELECT * FROM TABLENAME;
quit;
</code></pre>
"



