#
# 
# 
#

[Intro]
id=intro
category=Forensic
title=Forensic
title_en="Forensic"
desc="
"


[file]
id=file
category=Forensic
keywords=
title=Identifier un fichier
title_en="Identify a file"
desc="
Identifier le type d'un fichier se fait généralement en regardant l'extension du fichier.   
*.zip: archives compressées au format zip.   
*.doc: fichiers Words.   
   
Parfois l'extension ne correspond pas, ou le fichier n'en a pas.    
La commande 'file' examine le contenu du fichier, à la recherche d'entêtes caractéristiques.    
````
file secret.zip
````
"
desc_en="
Identifying the type of a file is usually done by looking at the file extension.   
*.zip: compressed archives in zip format.   
*.doc: Words files.  
    
Sometimes the extension does not match, or the file does not have one.    
The 'file' command examines the contents of the file, looking for well known headers.
````
file secret.zip
````
"


[zip]
id=zip
category=Forensic
keywords=
title=Zip chiffré
title_en="Encrypted Zip"
desc="
Cracker un zip chiffré avec une liste de mots de passe   
````
fcrackzip -u -v -D -p rockyou.txt secret.zip
````
"
desc_en="
Brute force an encrypted zip with a list of passwords
````
fcrackzip -u -v -D -p rockyou.txt secret.zip
````
"




[mdb]
id=mdb
category=Forensic
keywords=
title=Mdb - Microsoft Access Database
title_en=Mdb - Microsoft Access Database
desc="
Vérification du format du fichier:
````
$ file backup.mdb
backup.mdb: Microsoft Access Database
````
Si besoin, installer les outils:
````
apt-get install mdbtools
````
Lister les tables, et les dumper.
````
mdb-tables backup.mdb 
mdb-export backup.mdp  users passwd
````
"

desc_en="
Check file format:
````
$ file backup.mdb
backup.mdb: Microsoft Access Database
````
If needed,install tools:
````
apt-get install mdbtools
````
List tables, then dump.
````
mdb-tables backup.mdb 
mdb-export backup.mdp  users passwd
````
"



[pst]
id=pst
category=Forensic
keywords=
title=Pst - Outlook email file
title_en=Pst - Outlook email file
desc="
Vérification du format du fichier:
````
$ file mails.pst
mails.pst: Microsoft Outlook email folder
````
Si besoin, installer les outils:
````
apt-get install pst-utils
````
Extraire les boites mails, et les lire.
````
readpst mails.pst 
cat mails.mbox
````
"

desc_en="
Check file format:
````
$ file mails.pst
mails.pst: Microsoft Outlook email folder
````
If needed,install tools:
````
apt-get install pst-utils
````
Extract mailboxes, then read them.
````
readpst mails.pst 
cat mails.mbox
````
"


;
;
;
[odt]
id=odt
category=Forensic
keywords=
title=Odt - 
title_en=Odt - OpenOffice/LibreOffice word
desc="
Un fichier Odt est un fichier de traitement de texte tel OpenOffice ou LibreOffice, similaire à un document Word Docx.
   
Vérification du format du fichier:
````
$ file doc.odt
doc.odt: OpenDocument Text
````

Le fichier est une archive au format Zip contenant une arborescence de fichiers xml.    
On peut la dézipper et regarder le contenu des fichiers.
````
unzip doc.odt    
cat content.xml
````
    
On peut aussi utiliser odt2txt pour extraire le texte:
````
odt2txt doc.odt
````
"


desc_en="
An Odt file is a text document created by OpenOffice and LibreOffice.    
Odt files are similar to Word .docx files.    
    
Check file format:
````
$ file doc.odt
doc.odt: OpenDocument Text
````

An Odt file is a Zip archive containing xml files.    
Let unzip it, and read content.xml file.
````
unzip doc.odt    
cat content.xml
````
    
Or use odt2txt to extract text:
````
odt2txt doc.odt
````
"


;
;
;

[wireshark]
id=wireshark
category=Forensic
keywords=
title=Wireshark - Extraire un flux TCP
title_en=Wireshark - Extract TCP datas
desc="     
<u>Méthode 1:</u>      
Dans le Menu [Statistiques], lance l'outil [Conversations]    
Le premier onglet liste les trames ethernets.    
Le second onglet liste les paquets IP extraits des trames ethernets. Il permet d'identifier les IP des machines.       
L'onglet TCP, liste les sessions TCP contenues dans les paquets IP et reconstituées par Wireshark.    
Selectionne l'onglet TCP, click sur un flux TCP puis le bouton 'follow Stream'       
    
<u>Méthode 2:</u>      
Survoler les paquets, identifier le flux TCP, et faire un Click droit sur un paquet TCP, et 'Suivre/TCP Stream'. 
````
"

desc_en="
<u>Method 1:</u>      
Use the tool: Statistics/Conversations
Select the IP tab
Select the TCP tab, click on a TCP stream and then the 'follow stream' button    
    
<u>Method 2:</u>      
For experienced plux, hover over the packets, identify the TCP stream, and right click on a TCP packet, and 'Follow/TCP Stream'. 
````
"



[tshark]
id=tshark
category=Forensic
keywords=
title=Tshark - Extraire un flux TCP
title_en=Tshark - Extract TCP datas
desc="     
Identifier les connections TCP   
<pre><code>tshark -nlr FILENAME -Y tcp.flags.syn==1 -T fields -e tcp.stream</code></pre>
Tshark recherche les connections TCP et leur donne un identifiant: 0, 1,...   
    
Dumper le contenu de chaque flux en remplaçant ID par l'identifiant du flux: 0, 1,...   
<pre><code>tshark -nlr FILENAME -qz &quot;follow,tcp,ascii,ID&quot;</code></pre>
"

desc_en="
Uses tshark to identify TCP connections   
<pre><code>tshark -nlr FILENAME -Y tcp.flags.syn==1 -T fields -e tcp.stream</code></pre>
tshark looks for TCP connections and gives them an ID: 0, 1,...   
    
Dump the contents of each stream by replacing ID with the stream ID: 0, 1,...   
<pre><code>tshark -nlr FILENAME -qz &quot;follow,tcp,ascii,ID&quot;</code></pre>
"

  


[steghide]
id=steghide
category=Forensic
keywords=
title=Steghide - Cacher un fichier dans une image
title_en=Steghide - Hiding a file in an image
desc="     
<u>Cacher un fichier dans une image</u>
```
steghide embed -cf IMAGEFILE -ef FILETOHIDE 
```

<u>Extraire le fichier </u>
```
steghide extract -sf IMAGEFILE -p PASSWORD
```

<u>Bruteforcer l'extraction avec rockyou </u>
```
ROCKYOUFILE=/usr/share/wordlists/rockyou.txt
ROCKYOULIST=`cat /usr/share/wordlists/rockyou.txt`
for word in $ROCKYOULIST
do
    echo $word
    ret=`steghide extract -sf $1 -p $word`
    if [ $? -eq 0 ]
    then
        echo Found 
        exit 0
    fi
done
```

<u>Et en vidéo ?</u>    
<button id='video-proc-stegano' type='button' onclick='OnVideoButtonClick(this.id)'>Tuto Stegano</button>
"

desc_en="
<u>Hiding a file in an image</u>
```
steghide embed -cf IMAGEFILE -ef FILETOHIDE 
```

<u>Extract the file</u>
```
steghide extract -sf IMAGEFILE -p PASSWORD
```

<u>Bruteforce</u>
```
ROCKYOUFILE=/usr/share/wordlists/rockyou.txt
ROCKYOULIST=`cat /usr/share/wordlists/rockyou.txt`
for word in $ROCKYOULIST
do
    echo $word
    ret=`steghide extract -sf $1 -p $word`
    if [ $? -eq 0 ]
    then
        echo Found 
        exit 0
    fi
done
```
"




[DiskImageMount]
id=DiskImageMount
category=Forensic
keywords=
title=Lire une image disque brute
title_en=Read a raw disk image
desc="  
<u>Mounter le système de fichier sur le répertoire	/tmp</u>
<pre><code>mkdir /tmp/tmpmnt
sudo mount disk.img /tmp/tmpmnt
ls -al /tmp/tmpmnt
</code></pre>  
    
	
<u>Démounter le point de mountage</u>   
<pre><code>sudo umount /tmp/tmpmnt </code></pre>
"
desc_en="  
<u>Mounter filesystem on directory /tmp</u>
<pre><code>mkdir /tmp/tmpmnt
sudo mount disk.img /tmp/tmpmnt
ls -al /tmp/tmpmnt
</code></pre>  
    
	
<u>Umount filesystem</u>   
<pre><code>sudo umount /tmp/tmpmnt </code></pre>
"



[photorec]
id=photorec
category=Forensic
keywords=
title=Photorec - Recupérer des fichiers effacés
title_en=Photorec - Recovering deleted files
desc="  
<pre><code>photorec disk.img    
</code></pre> 
"
desc_en="  
<pre><code>photorec ~/forensic/usb1.img    
</code></pre> 
"



[veracrypt]
id=veracrypt
category=Forensic
keywords=
title=TrueCrypt/Veracrypt - Accéder à une partition chiffrée
title_en=TrueCrypt/Veracrypt - Cyphered disk image
desc="  
Créer un point de montage sur le disque.     
<pre><code>mkdir /tmp/tmpmnt
</code></pre> 

Utiliser Veracrypt en mode de compatibilité TrueCrypt (option -tc) et sans accélération (-m=nokernelcrypto) pour monter le disque.
<pre><code>sudo veracrypt -tc -m=nokernelcrypto  --mount truecrypt_safe.img /tmp/tmpmnt
Enter password for truecrypt_safe.img: 
Enter keyfile [none]: 
Protect hidden volume (if any)? (y=Yes/n=No) [No]: 
</code></pre>  
"
desc_en="  
Let's create a mount point on the disk.       
<pre><code>mkdir /tmp/tmpmnt
</code></pre> 

Let's use Veracrypt in TrueCrypt compatibility mode (option -tc) and without acceleration (-m=nokernelcrypto) to mount the disk. <pre><code>sudo veracrypt -tc -m=nokernelcrypto  --mount truecrypt_safe.img /tmp/tmpmnt
Enter password for truecrypt_safe.img: 
Enter keyfile [none]: 
Protect hidden volume (if any)? (y=Yes/n=No) [No]: 
</code></pre>  
"



[tc2john]
id=tc2john
category=Forensic
keywords=
title=TrueCrypt - Bruteforce password
title_en=TrueCrypt - Bruteforce password
desc="  
<u>Extraire le Hash</u>    
<pre><code>$ truecrypt2john.py truecrypt_safe.img > hash
</code></pre> 
    	 
<u>Casser le Hash</u>    
     
<pre><code>$ john --format=tc_ripemd160 hash
</code></pre> 
"
desc_en="  
<u>Extracting the Hash</u>     
<pre><code>$ truecrypt2john.py truecrypt_safe.img > hash
</code></pre> 
    	 
<u>Breaking the Hash</u> 
<pre><code>$ john --format=tc_ripemd160 hash
</code></pre> 
"