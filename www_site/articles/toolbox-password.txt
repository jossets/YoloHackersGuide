[Intro]
id=intro
category=Password
title=Passwords
desc="
Outils et listes de mots de passe.
"
title_en=Passwords
desc_en="
Brute force tools and password lists.
"



[Password]
id=password
category=Password
keywords=
chall=TrainingPasswordGuess1
chall2=TrainingPasswordGuess2
chall3=TrainingPasswordGuess3
title=Deviner un mot de passe
desc="
Quand il faut choisir un mot de passe, ça tombe toujours au plus mauvais moment.<br/>
Et comme, en plus, il faut s'en souvenir... les mots de passe sont souvent basés sur des notions simples: prénom, marque, souvenir...<br/>
<br/>
Heureusement, les responsables de la sécurité imposent des politiques de gestion des mots de passe, conçues pour éviter ces dérives... <br/>
Enfin, il faut le dire vite ;)<br/>
Dans 90% des cas, la majuscule est en début de mot de passe, les chiffres et le caractère spécial à la fin...<br/>
Evitez d'utiliser Vacances12! comme mot de passe...
"
; eng 
title_en=Guess the password
desc_en="
When it comes to choosing a password, it always comes at the worst possible time.<br/>
And since, moreover, it is necessary to remember it... passwords are often based on simple notions: first name, brand, memory...<br/>
<br/>
Fortunately, security managers impose password management policies designed to prevent these abuses... <br/>
Well, ...<br/>
In 90% of the cases, the capital letter is at the beginning of the password, the numbers and the special character at the end...<br/>
Please stop using Ferrari12$ as password...
"


[RockYou]
id=rockyou
category=Password
keywords=
chall=TrainingPasswordGuessTop5
title=Liste de mots de passe : Rockyou.txt
desc="
RockYou, une société basée en Californie, permettait de s'authentifier sur des application facebook sans avoir à saisir de mots de passe. En décembre 2009, elle s'est fait hacker. <br/>
<br/>
La base de données contenant les noms et mots de passe en clair de ses 32 millions de clients a été volée puis rendue publique.<br/>
Une analyse des mots de passe à montré que les deux tiers des mots de passe faisaient moins de 6 caractères, et que le mot de passe le plus utilisé était 123456.<br/>
<br/>
Cette liste des mots de passes, triés par fréquence est fréquement utilisée dans les CTF.<br/>
Sur Kali, le fichier, zippé, est rangé en : /usr/share/wordlists/rockyou.zip<br/>
Dans le terminal, pour prendre de bonnes habitudes, le fichier est rangé en : /usr/share/wordlists/rockyou.txt<br/>
<br/>
<a href='rockyou.txt'>fichier de mots de passe Rockyou: rockyou.txt</a>
"
; eng 
title_en=Password list : Rockyou.txt
desc_en="
RockYou, a California based company, made it possible to authenticate on facebook applications without having to re-enter passwords. In December 2009, it was hacked. <br/>
<br/>
The database containing the unencrypted names and passwords of its 32 million customers was stolen and then made public.<br/>
An analysis of the passwords showed that two thirds of the passwords were less than 6 characters long, and that the most commonly used password was 123456.<br/>
<br/>
This list of passwords, sorted by frequency is frequently used in CTF.<br/>
On Kali, the file, zipped, is stored in: /usr/share/wordlists/rockyou.zip<br/>
In the terminal, to get into good habits, the file can be found at: /usr/share/wordlists/rockyou.txt<br/>
<br/>
<a href='rockyou.txt'>password list Rockyou: rockyou.txt</a>
"



[Fuite]
id=fuite
category=Password
keywords=
title=Firefox Monitor
desc="
Pour savoir si ton adresse email est présente dans une fuite de donnée, tu peux utiliser le service de Firefox Monitor.<br/>
https://monitor.firefox.com/
"
; eng 
title_en=Firefox Monitor
desc_en="
To find out if your email address is present in a data leak, use the Firefox Monitor service.<br/>
https://monitor.firefox.com/
"





[Hash]
id=hash
category=Password
keywords=
chall=TrainingPasswordHashMD5
chall2=TrainingPasswordHashSHA256
title=Hash
desc="
Un professionnel ne garde jamais un mot de passe en clair. <br/>
Il enregistre un Hash.<br/>
<br/>
Un Hash est généré par une fonction mathématique à partir du mot de passe de l'utilisateur. <br/>
Quand l'utilisateur saisit son mot de passe, le logiciel calcule le Hash et le transmet au serveur qui le compare avec le Hash qu'il a stocké.
Si les deux Hash coincident, alors l'utilisateur connait le mot de passe, et est authentifié.<br/>
Si un curieux sniffe les messages, il ne verra pas le mot de passe, juste le Hash.<br/>
Connaissant le Hash, il est compliqué de retrouver le mot de passe.<br/>
<br/>
Pour calculer un Hash du mot de passe '123456' avec la fonction MD5, utilise la commande suivante dans le terminal :<br/>
$ printf '123456' | md5sum<br/>
123456 donnera toujours le même Hash MD5.<br/>
<br/>
La fonction MD5 a été très utilisée par le passé, mais la puissance des processeurs actuels impose l'utilisation de fonctions plus complexes à craquer comme SHA1, SHA256 ou SHA512.<br/>
La taille du Hash augmente avec la complexité de l'algorithme.<br/>
<br/>
printf '123456' | sha1sum<br/>
7c4a8d09ca3762af61e59520943dc26494f8941b<br/>
<br/>
printf '123456' | sha256sum<br/>
8d969eef6ecad3c29a3a629280e686cf0c3f5d5a86aff3ca12020c923adc6c92 <br/>
<br/>
Note: on utilise 'printf' et pas 'echo' pour un calcul de Hash. Echo ajoute un saut de ligne qui est pris en compte par le Hash.
"
; eng 
title_en=Hash
desc_en="
A professional never keeps a password. <br/>
It records a hash.<br/>
<br/>
A hash is generated by a mathematical function from the user's password. <br/>
When the user enters his password, the software calculates the hash and sends it to the server which compares it with the hash it has stored.
If the two hashes match, then the user knows the password, and is authenticated.
If someone sniffs the messages, he won't see the password, just the Hash.<br/>
Knowing the Hash, it is complicated to retrieve the password.
<br/>
To calculate a Hash of the password '123456' with the MD5 function, use the following command in the terminal :<br/>
$ printf '123456' | md5sum<br/>
123456 will always give the same MD5 Hash.<br/>
<br/>
The MD5 function has been widely used in the past, but the power of today's processors requires the use of more complex functions to be cracked such as SHA1, SHA256 or SHA512.<br/>.
The size of the hash increases with the complexity of the algorithm.<br/><br/>
printf '123456' | sha1sum<br/>
7c4a8d09ca3762af61e59520943dc26494f8941b<br/>
<br/>
printf '123456' | sha256sum<br/>
8d969eef6ecad3c29a3a629280e686cf0c3f5d5a86aff3ca12020c923adc6c92 <br/>
<br/>
Note: we use 'printf' and not 'echo' for a hash calculation. Echo adds a line break which is taken into account by the Hash.
"




[Salt]
id=hash
category=Password
keywords=
chall=TrainingPasswordGenHash
title=Salt
desc="
Les Hash plus longs sont plus compliqués à casser, mais il est toujours possible de pré-calculer les valeurs de listes comme RockYou.<br/>
<br/>
Pour éviter le précalcul des Hash, nous utilisons des Salts.<br/>
Ce sont des valeurs supplémentaires que l'on ajoute au début du mot de passe avant de calculer le Hash.<br/>
La vérification du Hash reste rapide, mais les tables pré-calculées deviennent inutiles, il faut les recalculer pour chaque Salt.<br/>
<br/>
Calculer le hash de 123456 avec le Salt ABCDE et la fonction de Hash MD5 en python:
<pre><code>$ python3 -c &quot;import crypt; print(crypt.crypt('123456', '\$1\$ABCDE\$'))&quot;
</code></pre>

Avec openssl: -1: MD5 password, -5:SHA256 and -6:SHA512
<pre><code>$ openssl passwd -1 -salt ABCDE  123456
</code></pre>

Le résultat est : $1$ABCDE$Kn5RIMYO1QXy7GtJysNSC1<br/>
Il est composé de 3 champs : <br/>
$1 : la fonction utilisée est MD5 ($5 SHA256, $6 SHA512)<br/>
$ABCDE : le Salt<br/>
$Kn5RIMYO1QXy7GtJysNSC1 : le Hash calculé en ajoutant le Salt<br/>
"
; eng 
title_en=Salt
desc_en="
Longer Hashes are more complicated to break, but it is still possible to pre-calculate them for common passwords such as the ones found in RockYou list.<br/>
<br/>
To avoid the pre-calculation of Hash, we use Salts.<br/>
These are additional values that are added at the beginning of the password before calculating the Hash.<br/>
The hash check remains fast, but the pre-calculated tables become useless, they have to be recalculated for each Salt.<br/>
<br/>
Compute the hash of 123456, with the Salt ABCDE, and the Hash MD5 function in python:
<pre><code>$ python3 -c &quot;import crypt; print(crypt.crypt('123456', '\$1\$ABCDE\$'))&quot;
</code></pre>

With openssl: -1: MD5 password, -5:SHA256 and -6:SHA512
<pre><code>$ openssl passwd -1 -salt ABCDE  123456
</code></pre>

The result is : $1$ABCDE$Kn5RIMYO1QXy7GtJysNSC1<br/>
Composed by three fields $xx$xx$xx : <br/>
$1 : hash function is MD5 ($5 SHA256, $6 SHA512)<br/>
$ABCDE : Salt<br/>
$Kn5RIMYO1QXy7GtJysNSC1 : MD5 hash of 123456+salt<br/>
"



[HashOnline]
id=hashonline
category=Password
keywords=
title=Online Hash crack
desc="
Pour casser des Hash Online:<br/>
- Crackstation : https://crackstation.net/

Essayer avec: e10adc3949ba59abbe56e057f20f883e
"
title=Online Hash crack
desc="
Use online services to crack hash:<br/>
- Crackstation : https://crackstation.net/

Try: e10adc3949ba59abbe56e057f20f883e
"


[EtcPasswd]
id=etcpasswd
category=Password
keywords=
title=/etc/passwd
desc="
Le fichier /etc/passwd est un fichier texte dont chaque ligne décrit un compte d'utilisateur.<br/>
Chaque ligne se compose de sept champs séparés par un deux-points. <br/>
Voici un exemple d'un enregistrement :<br/>
<pre><code>jsmith:x:1001:1000:Joe Smith,Room 1007,(234)555-8910,(234)5550044,email:/home/jsmith:/bin/sh
</code></pre>
Les champs, de gauche à droite, sont :<br/>
<br/>
<ul>
	<li>jsmith : le nom de l'utilisateur (login name). </li>
	<li>x : un x signifie que le hash du mots de passe est stocké, dans le fichier /etc/shadow qui n'est lisible que par le compte 'root'. Un * empêche les connexions d'un compte tout en conservant son nom d'utilisateur. Dans les premières version d'unix, ce champ contenait le hachage cryptographique du mot de passe de l'utilisateur.</li>
	<li>1001 : l'identifiant d'utilisateur.</li>
	<li>1000 : l'identifiant de groupe. Un nombre qui identifie le groupe principal de l'utilisateur. </li>
	<li>Joe Smith,Room 1007,(234)555-8910,(234)5550044,email : le champ Gecos. Un commentaire qui décrit la personne ou le compte. Généralement, il s'agit d'un ensemble de valeurs séparées par des virgules, fournissant le nom complet de l'utilisateur et ses coordonnées.</li>
	<li>/home/jsmith : le chemin vers le répertoire personnel de l'utilisateur.</li>
	<li>/bin/sh : le programme qui est lancé chaque fois que l'utilisateur se connecte au système. Peut être nologin.</li>
</ul>
Les premières lignes du fichier sont généralement des comptes systèmes.<br/>
Les comptes utilisateurs sont souvent décrits dans les dernière lignes.<br/>
Ce fichier permet d'identifier rapidement les utlisateurs, les applications (tomcat, mysql, www_data,...), leurs répertoires de travail, et s'ils ont ou non accès à un shell.<br/>
<a href='https://fr.wikipedia.org/wiki/Passwd'>Article sur Wikipedia: https://fr.wikipedia.org/wiki/Passwd</a>
"

; eng 
title_en=/etc/passwd
desc_en="
The /etc/passwd file is a text file with each line describing a user account.<br/>
Each line consists of seven fields separated by a colon.<br/>
Here is an example of a recording:<br/>
<pre><code>jsmith:x:1001:1000:Joe Smith,Room 1007,(234)555-8910,(234)5550044,email:/home/jsmith:/bin/sh
</code></pre>
<ul>
	<li>jsmith: login name. </li>
	<li>x : a x means password hash is stored in the /etc/shadow file, which is only readable by the root account. A * prevents connections from an account while keeping its username. In early versions of unix, this field contained the cryptographic hash of the user's password.</li>
	<li>1001 : UID - User ID</li>
	<li>1000 : GID - Group ID. A number, identifying the user main group. </li>
	<li>Joe Smith,Room 1007,(234)555-8910,(234)5550044,email : Gecos field. A comment that describes the person or account. Usually a comma-separated set of values, providing the user's full name and contact information.</li>
	<li>/home/jsmith : account home directory.</li>
	<li>/bin/sh : shell program used by the user. Can be nologin.</li>
</ul>
The first lines of the file are usually system accounts.<br/>
User accounts are often described in the last lines.<br/>
This file allows to quickly identify users, applications (tomcat, mysql, www_data,...), their working directories, and whether or not they have access to a shell.<br/>
<br/>
Wikipedia: https://en.wikipedia.org/wiki/Passwd
"





[John]
id=john
category=Password
keywords=
chall=TrainingPasswordJohn
title=Hash crack: John the ripper
desc="
John The ripper permet de vérifier si un hash correspond à un mot de passe présent dans une liste.<br/>
<br/>
Enregistrer un ou plusieurs Hash dans le fichier hash.txt 
<pre><code>$ echo 'root:$1$1337$WmteYFHyEYyx2MDVXln7Y1' >hash.txt
$ echo 'wordpressuser1:$P$BqV.SQ6OtKhVV7k7h1wqESkMh41buR0' >>hash.txt</code></pre>
 
Utiliser John the ripper pour casser le mot de passe en se servant sa liste de mots de passe interne: 
<pre><code>$ john hash.txt</code></pre>
 
Utiliser John the ripper pour casser le mot de passe en se servant de la liste Rockyou:  
<pre><code>$ john hash.txt --wordlist=/etc/share/wordlists/rockyou.txt</code></pre>
 
John n'affiche plus les mots de passe qu'il a déjà cassé.<br/>
Pour afficher ces mots de passe:  
<pre><code>$ john hash.txt --show </code></pre>
 
Il existe plusieurs version de John sur Internet.
Les distributions Kali et Parrot, installent la version John Community Enhanced -jumbo.
Cette distribution est disponible en https://github.com/openwall/john
<pre><code>$ sudo snap install john-the-ripper
$ john
John the Ripper 1.9.0-jumbo-1 OMP [linux-gnu 64-bit 64 AVX2 AC]</code></pre>
"
; eng 
title_en=Hash crack: John the ripper
desc_en="
John The ripper allows to check if a hash corresponds to a password present in a list.<br/>
<br/>
Save one or more hashes in hash.txt file. 
<pre><code>$ echo 'root:$1$1337$WmteYFHyEYyx2MDVXln7Y1' >hash.txt
$ echo 'wordpressuser1:$P$BqV.SQ6OtKhVV7k7h1wqESkMh41buR0' >>hash.txt</code></pre>
 
Use John the ripper to break the password using its internal password list: 
<pre><code>$ john hash.txt</code></pre>
 
Use John the ripper to break the password using the Rockyou list:  
<pre><code>$ john hash.txt --wordlist=/etc/share/wordlists/rockyou.txt</code></pre>
 
John no longer displays passwords he has already broken.<br/>
To view these passwords:  
<pre><code>$ john hash.txt --show </code></pre>
 
There are several versions of John on the Internet.
The Kali and Parrot distributions, install the John Community Enhanced -jumbo version.
This distribution is available at https://github.com/openwall/john 
<pre><code>$ sudo snap install john-the-ripper
$ john
John the Ripper 1.9.0-jumbo-1 OMP [linux-gnu 64-bit 64 AVX2 AC]</code></pre>
"



[JohnShadow]
id=johnshadow
category=Password
keywords=
title=John - /etc/passwd /etc/shadow
desc="
Bruteforcer /etc/shadows avec John:<br/>
<pre><code>$ unshadow /etc/passwd /etc/shadow > hash.txt  
$ john hash.txt --wordlist=/etc/share/wordlists/rockyou.txt 
$ john hash.txt --show 
</code></pre>
"
title_en=John - /etc/passwd /etc/shadow
desc_en="
Bruteforce /etc/shadows with John:<br/>
<pre><code>$ unshadow /etc/passwd /etc/shadow > hash.txt  
$ john hash.txt --wordlist=/etc/share/wordlists/rockyou.txt 
$ john hash.txt --show 
</code></pre>
"


[JohnMySQL]
id=johnmysql
category=Password
keywords=
title=John - MySQL Hash
desc="
Bruteforcer un hash My SQL avec John:<br/>
<pre><code>mysql -u dbuser -p drupaldb 
 show databases; 
 show tables; 
 select name, pass from users; 
 exit 
 -------+---------------------------------------------------------+ 
 | name  | pass                                                    | 
 +-------+---------------------------------------------------------+ 
 |       |                                                         | 
 | admin | $S$DvQI6Y6xxxxxxxxxxxxxxxxxxxxxxxxxEDTCP9nS5.i38jnEKuDR | 
 | Fxxxx | $S$DWGrxefxxxxxxxxxxxxxxxxxxxxxxxxxxxx3QBwC0EkvBQ/9TCGg | 
 | ..... | $S$Drpxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx/x/4ukZ.RXi | 
 +-------+---------------------------------------------------------+ 

echo '$S$DWGrxefxxxxxxxxxxxxxxxxxxxxxxxxxxxx3QBwC0EkvBQ/9TCGg'>hash.txt 
$ john hash.txt --wordlist=/etc/share/wordlists/rockyou.txt 
$ john hash.txt --show 
</code></pre>
"
title_en=John - MySQL Hash
desc_en="
Bruteforce MySQL Hash with John:<br/>
<pre><code>mysql -u dbuser -p drupaldb 
 show databases; 
 show tables; 
 select name, pass from users; 
 exit 
 -------+---------------------------------------------------------+ 
 | name  | pass                                                    | 
 +-------+---------------------------------------------------------+ 
 |       |                                                         | 
 | admin | $S$DvQI6Y6xxxxxxxxxxxxxxxxxxxxxxxxxEDTCP9nS5.i38jnEKuDR | 
 | Fxxxx | $S$DWGrxefxxxxxxxxxxxxxxxxxxxxxxxxxxxx3QBwC0EkvBQ/9TCGg | 
 | ..... | $S$Drpxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx/x/4ukZ.RXi | 
 +-------+---------------------------------------------------------+ 

echo '$S$DWGrxefxxxxxxxxxxxxxxxxxxxxxxxxxxxx3QBwC0EkvBQ/9TCGg'>hash.txt 
$ john hash.txt --wordlist=/etc/share/wordlists/rockyou.txt 
$ john hash.txt --show 
</code></pre>
"



[JohnSSHSA]
id=johnsshrsa
category=Password
keywords=
title=John - Clef RSA protégé par mot de passe
desc="
Bruteforcer un id_rsa chiffré (identifiant protégé par mot de passe servant à se connecter en ssh) avec John:<br/>
<br/>
Entête de la clef RSA:
<pre><code>-----BEGIN RSA PRIVATE KEY-----
Proc-Type: 4,ENCRYPTED
DEK-Info: AES-128-CBC,2AF25325A9B318F344B8391AFD767D6D

NhAAAAAwEAAQAAAgEA4hHFXkYNJLp47GZdP1LEJ3rueKhu4c9SCqzbeJfaWUJY/nZSmV76
<pre><code>
Regardons si le mot de passe est présent dans la liste Rockyou.</code></pre>
$ python  /usr/share/john/ssh2john.py id_rsa > id_rsa.hash
$ john --wordlist=/usr/share/wordlists/rockyou.txt id_rsa.hash
$ john hash.txt --show 
</code></pre>
"
title=John - Password protected SSH RSA Key
desc="
Bruteforce a pasword protected id_rsa id (id used for ssh connections):<br/>
<br/>
RSA header:
<pre><code>-----BEGIN RSA PRIVATE KEY-----
Proc-Type: 4,ENCRYPTED
DEK-Info: AES-128-CBC,2AF25325A9B318F344B8391AFD767D6D

NhAAAAAwEAAQAAAgEA4hHFXkYNJLp47GZdP1LEJ3rueKhu4c9SCqzbeJfaWUJY/nZSmV76
<pre><code>
Let check if the password is in the Rockyou list.
</code></pre>
$ python  /usr/share/john/ssh2john.py id_rsa > id_rsa.hash
$ john --wordlist=/usr/share/wordlists/rockyou.txt id_rsa.hash
$ john hash.txt --show 
</code></pre>
"
